/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.autor;

import communication.KomunikacijaSaServerom;
import domenn.Autor;
import domenn.Radnik;
import java.awt.BorderLayout;
import java.awt.Dialog;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import konstante.IOperacije;
import konstante.IStatus;
import niti.NitOsvezi;
import transfer.OdgovorObjekat;
import transfer.ZahtevObjekat;
import view.model.ModelTabelAutor;

/**
 *
 * @author Djordje Vukicevic
 */
public class FrmBrisanjeAutora extends javax.swing.JPanel {

    private Radnik ulogovaniRadnik;

    /**
     * Creates new form FrmBrisanjeAutora
     */
    public FrmBrisanjeAutora(boolean izmena) {
        initComponents();
        pripremiFormu();
        jButtonIzmeni.setVisible(false);
        if (izmena == true) {
            jButtonIzmeni.setVisible(true);
            jButtonIzbrisi.setVisible(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelFilter = new javax.swing.JLabel();
        jTextFieldFilter = new javax.swing.JTextField();
        jButtonPronadji = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAutori = new javax.swing.JTable();
        jButtonIzmeni = new javax.swing.JButton();
        jButtonIzbrisi = new javax.swing.JButton();
        jButtonOdustani = new javax.swing.JButton();
        jRadioButtonPrezime = new javax.swing.JRadioButton();
        jRadioButtonIme = new javax.swing.JRadioButton();
        jRadioButtonZanr = new javax.swing.JRadioButton();

        jLabelFilter.setText("Filter : ");

        jButtonPronadji.setText("Pronadji");
        jButtonPronadji.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPronadjiActionPerformed(evt);
            }
        });

        jTableAutori.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableAutori);

        jButtonIzmeni.setText("Izmeni");
        jButtonIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIzmeniActionPerformed(evt);
            }
        });

        jButtonIzbrisi.setText("Izbrisi");
        jButtonIzbrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIzbrisiActionPerformed(evt);
            }
        });

        jButtonOdustani.setText("Odustani");
        jButtonOdustani.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOdustaniActionPerformed(evt);
            }
        });

        jRadioButtonPrezime.setText("Prezime");

        jRadioButtonIme.setText("Ime");

        jRadioButtonZanr.setText("Zanr");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonIzmeni)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonIzbrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonOdustani)
                        .addGap(20, 20, 20))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabelFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonPronadji))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(10, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRadioButtonPrezime)
                        .addGap(31, 31, 31)
                        .addComponent(jRadioButtonIme, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jRadioButtonZanr, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelFilter)
                    .addComponent(jTextFieldFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPronadji))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonPrezime)
                    .addComponent(jRadioButtonIme)
                    .addComponent(jRadioButtonZanr))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonIzmeni)
                    .addComponent(jButtonIzbrisi)
                    .addComponent(jButtonOdustani))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonPronadjiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPronadjiActionPerformed
        String filter = jTextFieldFilter.getText();
        String nalepi = "";
        
        if(jRadioButtonIme.isSelected()){
            nalepi = "WHERE a.ime LIKE '"+filter+"' ORDER BY a.ime ASC";   
        }
        
        if(jRadioButtonPrezime.isSelected()){
            nalepi = "WHERE a.prezime LIKE '"+filter+"' ORDER BY a.prezime ASC";
        }
        
        if(jRadioButtonZanr.isSelected()){
            nalepi = "WHERE a.zanr LIKE '"+filter+"' ORDER BY a.zanr";
        }
        srediTabelu(nalepi);
        JOptionPane.showMessageDialog(this, "Sistem je nasao autore po zadatoj vrednosti!", "Pronadji", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButtonPronadjiActionPerformed

    private void jButtonOdustaniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOdustaniActionPerformed
        this.getTopLevelAncestor().setVisible(false);
    }//GEN-LAST:event_jButtonOdustaniActionPerformed

    private void jButtonIzbrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIzbrisiActionPerformed
        int red = jTableAutori.getSelectedRow();
        if (red == -1) {
            JOptionPane.showMessageDialog(this, "Morate prvo selektovati uslugu za brisanje!");
            return;
        }

        ModelTabelAutor model = (ModelTabelAutor) jTableAutori.getModel();
        Autor autor = model.vratiAutora(red);

        ZahtevObjekat zahtev = new ZahtevObjekat();
        zahtev.setOperacija(IOperacije.IZBRISI_AUTORE);
        zahtev.setParametar(autor);
        KomunikacijaSaServerom.getInstanca().posaljiZahtev(zahtev);
        OdgovorObjekat odgovor = KomunikacijaSaServerom.getInstanca().primiOdgovor();
        
        if (odgovor.getStatus() == IStatus.OK) {
            JOptionPane.showMessageDialog(this, "Sistem je uspesno izbrisao autora.", "Brisanje autora", JOptionPane.INFORMATION_MESSAGE);
            String filter = ""; //jTextFieldFilter.getText();
            srediTabelu(filter);
        } else {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da izbrise autora.", "Brisanje autora", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonIzbrisiActionPerformed

    private void jButtonIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIzmeniActionPerformed
        int red = jTableAutori.getSelectedRow();
        if (red == -1) {
            JOptionPane.showMessageDialog(this, "Morate prvo selektovati uslugu za izmenu!");
            return;
        }

        ModelTabelAutor model = (ModelTabelAutor) jTableAutori.getModel();
        Autor autor = model.vratiAutora(red);

        this.getTopLevelAncestor().setVisible(false);
        FrmKreiranjeAutora panel = new FrmKreiranjeAutora(autor);
        panel.setUlogovaniRadnik(ulogovaniRadnik);
        JDialog dialog = new JDialog((Dialog) this.getTopLevelAncestor(), "Izmena autora", true);
        dialog.setLayout(new BorderLayout());
        dialog.add(panel, BorderLayout.CENTER);
        dialog.pack();
        dialog.setVisible(true);
    }//GEN-LAST:event_jButtonIzmeniActionPerformed

    public Radnik getUlogovaniRadnik() {
        return ulogovaniRadnik;
    }

    public void setUlogovaniRadnik(Radnik ulogovaniRadnik) {
        this.ulogovaniRadnik = ulogovaniRadnik;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonIzbrisi;
    private javax.swing.JButton jButtonIzmeni;
    private javax.swing.JButton jButtonOdustani;
    private javax.swing.JButton jButtonPronadji;
    private javax.swing.JLabel jLabelFilter;
    private javax.swing.JRadioButton jRadioButtonIme;
    private javax.swing.JRadioButton jRadioButtonPrezime;
    private javax.swing.JRadioButton jRadioButtonZanr;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableAutori;
    private javax.swing.JTextField jTextFieldFilter;
    // End of variables declaration//GEN-END:variables

    public void pripremiFormu() {
        srediTabelu("");
    }

    private void srediTabelu(String nalepi) {
        ArrayList<Autor> listaAutora = new ArrayList<>();
        ZahtevObjekat zahtev = new ZahtevObjekat();
        zahtev.setOperacija(IOperacije.VRATI_AUTORE);
        zahtev.setParametar(nalepi);
        KomunikacijaSaServerom.getInstanca().posaljiZahtev(zahtev);
        
        OdgovorObjekat odgovor = KomunikacijaSaServerom.getInstanca().primiOdgovor();
        listaAutora = (ArrayList<Autor>) odgovor.getOdgovor();
        
        ModelTabelAutor model = new ModelTabelAutor(listaAutora);
        jTableAutori.setModel(model);
    }
}
