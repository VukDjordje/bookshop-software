/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.knjiga;

import communication.KomunikacijaSaServerom;
import domenn.Autor;
import domenn.Izdavac;
import domenn.Knjiga;
import domenn.Napisana;
import domenn.Radnik;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import konstante.IOperacije;
import konstante.IStatus;
import transfer.OdgovorObjekat;
import transfer.ZahtevObjekat;
import view.model.ModelTabelAutor;

/**
 *
 * @author Djordje Vukicevic
 */
public class FrmDodavanjeKnjige extends javax.swing.JFrame {

    Radnik ulogovaniRadnik;
    Autor odabraniAutor;

    /**
     * Creates new form FrmProba
     */
    public FrmDodavanjeKnjige() {
        initComponents();
        srediFormu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelUlogovaniKorisnik = new javax.swing.JLabel();
        jLabelNaziv = new javax.swing.JLabel();
        jLabelGodinaIzdanja = new javax.swing.JLabel();
        jLabelIzdavac = new javax.swing.JLabel();
        jLabelOpis = new javax.swing.JLabel();
        jLabelCena = new javax.swing.JLabel();
        jTextFieldNaziv = new javax.swing.JTextField();
        jTextFieldGodinaIzdanja = new javax.swing.JTextField();
        jComboBoxIzdavaci = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaOpis = new javax.swing.JTextArea();
        jTextFieldCena = new javax.swing.JTextField();
        jButtonDodajAutora = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAutori = new javax.swing.JTable();
        jButtonSacuvaj = new javax.swing.JButton();
        jButtonOdustani = new javax.swing.JButton();
        jButtonObrisi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabelUlogovaniKorisnik.setText("Ulogovani korisnik :");

        jLabelNaziv.setText("Naziv :");

        jLabelGodinaIzdanja.setText("Godina izdanja :");

        jLabelIzdavac.setText("Izdavac :");

        jLabelOpis.setText("Opis :");

        jLabelCena.setText("Cena :");

        jComboBoxIzdavaci.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jTextAreaOpis.setColumns(20);
        jTextAreaOpis.setRows(5);
        jScrollPane2.setViewportView(jTextAreaOpis);

        jButtonDodajAutora.setText("Dodaj autora");
        jButtonDodajAutora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDodajAutoraActionPerformed(evt);
            }
        });

        jTableAutori.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableAutori);

        jButtonSacuvaj.setText("Sacuvaj");
        jButtonSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSacuvajActionPerformed(evt);
            }
        });

        jButtonOdustani.setText("Odustani");
        jButtonOdustani.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOdustaniActionPerformed(evt);
            }
        });

        jButtonObrisi.setText("Obrisi autora");
        jButtonObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonObrisiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelUlogovaniKorisnik)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabelNaziv, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelCena, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelOpis, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelIzdavac, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelGodinaIzdanja, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldNaziv)
                            .addComponent(jTextFieldGodinaIzdanja)
                            .addComponent(jComboBoxIzdavaci, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                            .addComponent(jTextFieldCena)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonDodajAutora)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonObrisi))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jButtonSacuvaj)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonOdustani)
                .addGap(44, 44, 44))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabelUlogovaniKorisnik)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNaziv)
                    .addComponent(jTextFieldNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelGodinaIzdanja)
                    .addComponent(jTextFieldGodinaIzdanja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelIzdavac)
                    .addComponent(jComboBoxIzdavaci, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jLabelOpis)))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCena)
                    .addComponent(jTextFieldCena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonDodajAutora)
                    .addComponent(jButtonObrisi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonOdustani)
                    .addComponent(jButtonSacuvaj))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDodajAutoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDodajAutoraActionPerformed
        FrmDodajAutora dialog = new FrmDodajAutora(this, true);
        dialog.setTitle("Dodavanje autora");
        dialog.pack();
        dialog.setVisible(true);
    }//GEN-LAST:event_jButtonDodajAutoraActionPerformed

    private void jButtonOdustaniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOdustaniActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonOdustaniActionPerformed

    private void jButtonObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonObrisiActionPerformed
        int red = jTableAutori.getSelectedRow();
        if (red != -1) {
            ModelTabelAutor model = (ModelTabelAutor) jTableAutori.getModel();
            model.obrisiAutora(red);
        } else {
            JOptionPane.showMessageDialog(this, "Morate izabrati autora!", "Obrisi autora", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonObrisiActionPerformed

    private void jButtonSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSacuvajActionPerformed
        if (jTextFieldNaziv.getText().isEmpty() || jTextFieldGodinaIzdanja.getText().isEmpty()
                || jTextFieldCena.getText().isEmpty() || jTextAreaOpis.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Morate popuniti sva polja!", "Dodavanje knjige", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String naziv = jTextFieldNaziv.getText();
        int godina = -1;
        try {
            godina = Integer.parseInt(jTextFieldGodinaIzdanja.getText().trim());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Godina mora biti broj", "Sacuvaj", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Izdavac izdavac = (Izdavac) jComboBoxIzdavaci.getSelectedItem();
        String opis = jTextAreaOpis.getText();
        double cena = -1;
        try {
            cena = Double.parseDouble(jTextFieldCena.getText().trim());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Cena mora biti broj", "Sacuvaj", JOptionPane.ERROR_MESSAGE);
            return;
        }

        ModelTabelAutor model = (ModelTabelAutor) jTableAutori.getModel();
        ArrayList<Autor> listaAutora = model.vratiListuAutora();
        
        if(listaAutora.size() < 1){
            JOptionPane.showMessageDialog(this, "Mora postojati bar jedan autor!", "Sacuvaj", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        Knjiga knjiga = new Knjiga(-1, naziv, godina, opis, izdavac, ulogovaniRadnik, listaAutora, cena);
        Napisana napisana = new Napisana(knjiga, null);

        for (Autor autor : listaAutora) {
            int brojac = 1;
            System.out.println(brojac + ". " + autor.getIme());
        }

        ZahtevObjekat zahtev = new ZahtevObjekat();
        zahtev.setParametar(napisana);
        zahtev.setOperacija(IOperacije.UBACI_KNJIGU);
        KomunikacijaSaServerom.getInstanca().posaljiZahtev(zahtev);

        OdgovorObjekat odgovor = KomunikacijaSaServerom.getInstanca().primiOdgovor();
        if (odgovor.getStatus() == IStatus.OK) {
            JOptionPane.showMessageDialog(this, "Sistem je zapamtio knjigu!", "Sacuvaj", JOptionPane.INFORMATION_MESSAGE);
            jTextFieldNaziv.setText("");
            jTextFieldGodinaIzdanja.setText("");
            jTextAreaOpis.setText("");
            jTextFieldCena.setText("");
            model.isprazniTabelu();
        } else {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti knjigu", "Sacuvaj", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_jButtonSacuvajActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmDodavanjeKnjige.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmDodavanjeKnjige.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmDodavanjeKnjige.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmDodavanjeKnjige.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmDodavanjeKnjige().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDodajAutora;
    private javax.swing.JButton jButtonObrisi;
    private javax.swing.JButton jButtonOdustani;
    private javax.swing.JButton jButtonSacuvaj;
    private javax.swing.JComboBox<Object> jComboBoxIzdavaci;
    private javax.swing.JLabel jLabelCena;
    private javax.swing.JLabel jLabelGodinaIzdanja;
    private javax.swing.JLabel jLabelIzdavac;
    private javax.swing.JLabel jLabelNaziv;
    private javax.swing.JLabel jLabelOpis;
    private javax.swing.JLabel jLabelUlogovaniKorisnik;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableAutori;
    private javax.swing.JTextArea jTextAreaOpis;
    private javax.swing.JTextField jTextFieldCena;
    private javax.swing.JTextField jTextFieldGodinaIzdanja;
    private javax.swing.JTextField jTextFieldNaziv;
    // End of variables declaration//GEN-END:variables

    public void setUlogovaniRadnik(Radnik ulogovaniRadnik) {
        this.ulogovaniRadnik = ulogovaniRadnik;
        jLabelUlogovaniKorisnik.setText("Ulogovani radnik: " + ulogovaniRadnik);
    }

    private void srediFormu() {
        popuniKomboBoxIzdavaci();
        pripremiTabeluAutora();
    }

    private void popuniKomboBoxIzdavaci() {
        ZahtevObjekat zahtev = new ZahtevObjekat();
        zahtev.setOperacija(IOperacije.VRATI_IZDAVACE);
        KomunikacijaSaServerom.getInstanca().posaljiZahtev(zahtev);

        OdgovorObjekat odgovor = KomunikacijaSaServerom.getInstanca().primiOdgovor();
        ArrayList<Izdavac> listaIzdavaca = (ArrayList<Izdavac>) odgovor.getOdgovor();

        jComboBoxIzdavaci.removeAllItems();
        for (Izdavac izdavac : listaIzdavaca) {
            jComboBoxIzdavaci.addItem(izdavac);
        }
    }

    private void pripremiTabeluAutora() {
        ModelTabelAutor model = new ModelTabelAutor();
        jTableAutori.setModel(model);
    }

    void setAutor(Autor autor) {
        //odabraniAutor = autor;
        ModelTabelAutor model = (ModelTabelAutor) jTableAutori.getModel();
        model.dodajAutora(autor);
    }
}
